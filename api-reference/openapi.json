{
  "openapi": "3.1.0",
  "info": {
    "title": "Loan Management System API",
    "description": "API for managing loans, borrowers, and repayments in a financial system.",
    "license": { "name": "MIT" },
    "version": "1.0.0"
  },
  "servers": [{ "url": "https://lms.tausi.africa/v1" }],
  "security": [{ "bearerAuth": [] }],
  "paths": {
    "/loans": {
      "get": {
        "summary": "List all loans",
        "description": "Returns paginated loans accessible to the authenticated user.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination (defaults to 1).",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "rows",
            "in": "query",
            "description": "Number of loans per page (default: 100, max: 100).",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with loan list.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Loan" }
                    },
                    "total": {
                      "type": "integer",
                      "description": "Total number of items available"
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number"
                    },
                    "rowsPerPage": {
                      "type": "integer",
                      "description": "Number of items per page"
                    }
                  },
                  "required": ["items", "total", "page", "rowsPerPage"]
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400Error" }
        }
      },
      "post": {
        "summary": "Create a new loan",
        "description": "Registers a new loan in the system with the provided details.",
        "requestBody": {
          "description": "Loan creation payload.",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/NewLoan" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Loan created successfully.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Loan" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400Error" }
        }
      }
    },
    "/loans/{id}": {
      "get": {
        "summary": "Get a single loan",
        "description": "Returns a single loan by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique ID of the loan to retrieve.",
            "required": true,
            "schema": { "type": "integer", "format": "int64", "minimum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with loan details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Loan" }
                    },
                    "total": {
                      "type": "integer",
                      "description": "Total number of items (always 1 for single item)",
                      "default": 1
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number (always 1 for single item)",
                      "default": 1
                    },
                    "rowsPerPage": {
                      "type": "integer",
                      "description": "Number of items per page (always 1 for single item)",
                      "default": 1
                    }
                  },
                  "required": ["items", "total", "page", "rowsPerPage"]
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400Error" }
        }
      },
      "put": {
        "summary": "Update a loan",
        "description": "Modifies details of an existing loan by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique ID of the loan to update.",
            "required": true,
            "schema": { "type": "integer", "format": "int64", "minimum": 1 }
          }
        ],
        "requestBody": {
          "description": "Updated loan data.",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateLoan" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Loan updated successfully.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Loan" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400Error" }
        }
      },
      "delete": {
        "summary": "Delete a loan",
        "description": "Permanently removes a loan record by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique ID of the loan to delete.",
            "required": true,
            "schema": { "type": "integer", "format": "int64", "minimum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Loan deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400Error" }
        }
      }
    },
    "/borrowers": {
      "get": {
        "summary": "List all borrowers",
        "description": "Returns paginated borrower records.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination (defaults to 1).",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "rows",
            "in": "query",
            "description": "Number of borrowers per page (default: 100, max: 100).",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with borrower list.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Borrower" }
                    },
                    "total": {
                      "type": "integer",
                      "description": "Total number of items available"
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number"
                    },
                    "rowsPerPage": {
                      "type": "integer",
                      "description": "Number of items per page"
                    }
                  },
                  "required": ["items", "total", "page", "rowsPerPage"]
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400Error" }
        }
      },
      "post": {
        "summary": "Create a new borrower",
        "description": "Registers a new borrower (individual or business) in the system.",
        "requestBody": {
          "description": "Borrower creation payload.",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/NewBorrower" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Borrower created successfully.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Borrower" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400Error" }
        }
      }
    },
    "/borrowers/{id}": {
      "get": {
        "summary": "Get a single borrower",
        "description": "Returns a single borrower by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique ID of the borrower to retrieve.",
            "required": true,
            "schema": { "type": "integer", "format": "int64", "minimum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with borrower details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Borrower" }
                    },
                    "total": {
                      "type": "integer",
                      "description": "Total number of items (always 1 for single item)",
                      "default": 1
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number (always 1 for single item)",
                      "default": 1
                    },
                    "rowsPerPage": {
                      "type": "integer",
                      "description": "Number of items per page (always 1 for single item)",
                      "default": 1
                    }
                  },
                  "required": ["items", "total", "page", "rowsPerPage"]
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400Error" }
        }
      },
      "put": {
        "summary": "Update a borrower",
        "description": "Modifies details of an existing borrower by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique ID of the borrower to update.",
            "required": true,
            "schema": { "type": "integer", "format": "int64", "minimum": 1 }
          }
        ],
        "requestBody": {
          "description": "Updated borrower data.",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateBorrower" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Borrower updated successfully.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Borrower" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400Error" }
        }
      },
      "delete": {
        "summary": "Delete a borrower",
        "description": "Permanently removes a borrower record by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique ID of the borrower to delete.",
            "required": true,
            "schema": { "type": "integer", "format": "int64", "minimum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Borrower deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400Error" }
        }
      }
    },
    "/repayments": {
      "get": {
        "summary": "List all repayments",
        "description": "Returns paginated repayment records.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination (defaults to 1).",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "rows",
            "in": "query",
            "description": "Number of repayments per page (default: 100, max: 100).",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with repayment list.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Repayment" }
                    },
                    "total": {
                      "type": "integer",
                      "description": "Total number of items available"
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number"
                    },
                    "rowsPerPage": {
                      "type": "integer",
                      "description": "Number of items per page"
                    }
                  },
                  "required": ["items", "total", "page", "rowsPerPage"]
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400Error" }
        }
      },
      "post": {
        "summary": "Create a repayment",
        "description": "Records a new repayment against a loan.",
        "requestBody": {
          "description": "Repayment creation payload.",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/NewRepayment" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Repayment recorded successfully.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Repayment" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400Error" }
        }
      }
    },
    "/repayments/{id}": {
      "get": {
        "summary": "Get a single repayment",
        "description": "Returns a single repayment by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique ID of the repayment to retrieve.",
            "required": true,
            "schema": { "type": "integer", "format": "int64", "minimum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with repayment details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Repayment" }
                    },
                    "total": {
                      "type": "integer",
                      "description": "Total number of items (always 1 for single item)",
                      "default": 1
                    },
                    "page": {
                      "type": "integer",
                      "description": "Current page number (always 1 for single item)",
                      "default": 1
                    },
                    "rowsPerPage": {
                      "type": "integer",
                      "description": "Number of items per page (always 1 for single item)",
                      "default": 1
                    }
                  },
                  "required": ["items", "total", "page", "rowsPerPage"]
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400Error" }
        }
      },
      "put": {
        "summary": "Update a repayment",
        "description": "Modifies details of an existing repayment by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique ID of the repayment to update.",
            "required": true,
            "schema": { "type": "integer", "format": "int64", "minimum": 1 }
          }
        ],
        "requestBody": {
          "description": "Updating repayment data.",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateRepayment" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Repayment updated successfully.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Repayment" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400Error" }
        }
      },
      "delete": {
        "summary": "Delete a repayment",
        "description": "Permanently removes a repayment record by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique ID of the repayment to delete.",
            "required": true,
            "schema": { "type": "integer", "format": "int64", "minimum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Repayment deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400Error" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Loan": {
        "type": "object",
        "properties": {
          "loan_id": { "type": "integer", "format": "int64" },
          "borrower_id": { "type": "integer", "format": "int64" },
          "loan_application_id": { "type": "string" },
          "loan_disbursed_by_id": { "type": "integer", "format": "int64" },
          "loan_principal_amount": { "type": "number", "format": "float" },
          "loan_released_date": { "type": "string", "format": "date" },
          "loan_interest_method": { "type": "string" },
          "loan_interest_type": { "type": "string" },
          "loan_interest_period": { "type": "string" },
          "loan_interest": { "type": "number", "format": "float" },
          "loan_duration_period": { "type": "string" },
          "loan_duration": { "type": "integer", "format": "int32" },
          "loan_payment_scheme_id": { "type": "integer", "format": "int64" },
          "loan_num_of_repayments": { "type": "integer", "format": "int32" },
          "loan_decimal_places": { "type": "string" }
        }
      },
      "NewBorrower": {
        "required": ["borrower_id", "borrower_business_name", "borrower_email"],
        "type": "object",
        "properties": {
          "borrower_id": { "type": "integer", "format": "int64" },
          "borrower_country": { "type": "string" },
          "borrower_business_name": { "type": "string" },
          "borrower_mobile": { "type": "string" },
          "borrower_email": { "type": "string", "format": "email" },
          "borrower_address": { "type": "string" },
          "borrower_credit_score": { "type": "integer", "format": "int32" },
          "custom_field_24036": { "type": "string" }
        }
      },
      "UpdateBorrower": {
        "type": "object",
        "properties": {
          "borrower_country": { "type": "string" },
          "borrower_business_name": { "type": "string" },
          "borrower_mobile": { "type": "string" },
          "borrower_email": { "type": "string", "format": "email" },
          "borrower_address": { "type": "string" },
          "borrower_credit_score": { "type": "integer", "format": "int32" },
          "custom_field_24036": { "type": "string" }
        }
      },
      "Borrower": {
        "type": "object",
        "properties": {
          "borrower_id": { "type": "integer", "format": "int64" },
          "borrower_country": { "type": "string" },
          "borrower_business_name": { "type": "string" },
          "borrower_mobile": { "type": "string" },
          "borrower_email": { "type": "string", "format": "email" },
          "borrower_address": { "type": "string" },
          "borrower_credit_score": { "type": "integer", "format": "int32" },
          "custom_field_24036": { "type": "string" }
        }
      },
      "NewLoan": {
        "required": [
          "loan_id",
          "borrower_id",
          "loan_application_id",
          "loan_disbursed_by_id",
          "loan_principal_amount",
          "loan_released_date",
          "loan_interest_method",
          "loan_interest_type",
          "loan_interest_period",
          "loan_interest",
          "loan_duration_period",
          "loan_duration",
          "loan_payment_scheme_id",
          "loan_num_of_repayments",
          "loan_decimal_places"
        ],
        "type": "object",
        "properties": {
          "loan_id": { "type": "integer", "format": "int64" },
          "borrower_id": { "type": "integer", "format": "int64" },
          "loan_application_id": { "type": "string" },
          "loan_disbursed_by_id": { "type": "integer", "format": "int64" },
          "loan_principal_amount": { "type": "number", "format": "float" },
          "loan_released_date": { "type": "string", "format": "date" },
          "loan_interest_method": { "type": "string" },
          "loan_interest_type": { "type": "string" },
          "loan_interest_period": { "type": "string" },
          "loan_interest": { "type": "number", "format": "float" },
          "loan_duration_period": { "type": "string" },
          "loan_duration": { "type": "integer", "format": "int32" },
          "loan_payment_scheme_id": { "type": "integer", "format": "int64" },
          "loan_num_of_repayments": { "type": "integer", "format": "int32" },
          "loan_decimal_places": { "type": "string" }
        }
      },
      "UpdateLoan": {
        "type": "object",
        "properties": {
          "loan_id": { "type": "integer", "format": "int64" },
          "borrower_id": { "type": "integer", "format": "int64" },
          "loan_application_id": { "type": "string" },
          "loan_disbursed_by_id": { "type": "integer", "format": "int64" },
          "loan_principal_amount": { "type": "number", "format": "float" },
          "loan_released_date": { "type": "string", "format": "date" },
          "loan_interest_method": { "type": "string" },
          "loan_interest_type": { "type": "string" },
          "loan_interest_period": { "type": "string" },
          "loan_interest": { "type": "number", "format": "float" },
          "loan_duration_period": { "type": "string" },
          "loan_duration": { "type": "integer", "format": "int32" },
          "loan_payment_scheme_id": { "type": "integer", "format": "int64" },
          "loan_num_of_repayments": { "type": "integer", "format": "int32" },
          "loan_decimal_places": { "type": "string" }
        }
      },
      "NewRepayment": {
        "required": [
          "repayment_id",
          "loan_id",
          "loan_repayment_method_id",
          "collector_id"
        ],
        "type": "object",
        "properties": {
          "repayment_id": { "type": "integer", "format": "int64" },
          "loan_id": { "type": "integer", "format": "int64" },
          "repayment_amount": {
            "type": "number",
            "format": "float",
            "minimum": 0
          },
          "loan_repayment_method_id": { "type": "integer", "format": "int32" },
          "repayment_collected_date": { "type": "string", "format": "date" },
          "collector_id": { "type": "integer", "format": "int64" },
          "principal_repayment_amount": {
            "type": "number",
            "format": "float",
            "minimum": 0
          },
          "interest_repayment_amount": {
            "type": "number",
            "format": "float",
            "minimum": 0
          },
          "fees_repayment_amount": {
            "type": "number",
            "format": "float",
            "minimum": 0
          },
          "penalty_repayment_amount": {
            "type": "number",
            "format": "float",
            "minimum": 0
          },
          "repayment_description": { "type": "string", "maxLength": 255 }
        }
      },
      "UpdateRepayment": {
        "type": "object",
        "properties": {
          "loan_id": { "type": "integer", "format": "int64" },
          "repayment_amount": {
            "type": "number",
            "format": "float",
            "minimum": 0
          },
          "loan_repayment_method_id": { "type": "integer", "format": "int32" },
          "repayment_collected_date": { "type": "string", "format": "date" },
          "collector_id": { "type": "integer", "format": "int64" },
          "principal_repayment_amount": {
            "type": "number",
            "format": "float",
            "minimum": 0
          },
          "interest_repayment_amount": {
            "type": "number",
            "format": "float",
            "minimum": 0
          },
          "fees_repayment_amount": {
            "type": "number",
            "format": "float",
            "minimum": 0
          },
          "penalty_repayment_amount": {
            "type": "number",
            "format": "float",
            "minimum": 0
          },
          "repayment_description": { "type": "string", "maxLength": 255 }
        }
      },
      "Repayment": {
        "type": "object",
        "properties": {
          "repayment_id": { "type": "integer", "format": "int64" },
          "loan_id": { "type": "integer", "format": "int64" },
          "repayment_amount": {
            "type": "number",
            "format": "float",
            "minimum": 0
          },
          "loan_repayment_method_id": { "type": "integer", "format": "int32" },
          "repayment_collected_date": { "type": "string", "format": "date" },
          "collector_id": { "type": "integer", "format": "int64" },
          "principal_repayment_amount": {
            "type": "number",
            "format": "float",
            "minimum": 0
          },
          "interest_repayment_amount": {
            "type": "number",
            "format": "float",
            "minimum": 0
          },
          "fees_repayment_amount": {
            "type": "number",
            "format": "float",
            "minimum": 0
          },
          "penalty_repayment_amount": {
            "type": "number",
            "format": "float",
            "minimum": 0
          },
          "repayment_description": { "type": "string", "maxLength": 255 }
        }
      }
    },
    "responses": {
      "400Error": {
        "description": "Bad request due to invalid parameters or missing data.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "description": "Error code",
                  "example": 243
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "Invalid loan ID"
                }
              },
              "required": ["code", "message"]
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "JWT token for authentication (format: `Bearer <token>`)."
      }
    }
  }
}
