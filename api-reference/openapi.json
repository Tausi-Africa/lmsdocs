{
  "openapi": "3.1.0",
  "info": {
    "title": "Loan Management System API",
    "description": "API for managing loans, borrowers, and repayments in a financial system.",
    "license": { "name": "MIT" },
    "version": "1.0.0"
  },
  "servers": [{ "url": "https://lms.bsa.ai/api/v1" }],
  "security": [{ "bearerAuth": [] }],
  "paths": {
    "/loans": {
      "get": {
        "summary": "List all loans",
        "description": "Returns paginated loans accessible to the authenticated user.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination (defaults to 1).",
            "schema": { "type": "integer", "format": "int32", "minimum": 1 }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of loans per page (default: 20, max: 100).",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with loan list.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Success" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400Error" }
        }
      },
      "post": {
        "summary": "Create a new loan",
        "description": "Registers a new loan in the system with the provided details.",
        "requestBody": {
          "description": "Loan creation payload.",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Loan" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Loan created successfully.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Success" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400Error" }
        }
      }
    },
    "/loans/{id}": {
      "put": {
        "summary": "Update a loan",
        "description": "Modifies details of an existing loan by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique ID of the loan to update.",
            "required": true,
            "schema": { "type": "integer", "format": "int64", "minimum": 1 }
          }
        ],
        "requestBody": {
          "description": "Updated loan data.",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Loan" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Loan updated successfully.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Success" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400Error" }
        }
      },
      "delete": {
        "summary": "Delete a loan",
        "description": "Permanently removes a loan record by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique ID of the loan to delete.",
            "required": true,
            "schema": { "type": "integer", "format": "int64", "minimum": 1 }
          }
        ],
        "responses": {
          "204": { "description": "Loan deleted successfully." },
          "400": { "$ref": "#/components/responses/400Error" }
        }
      }
    },
    "/borrowers": {
      "get": {
        "summary": "List all borrowers",
        "description": "Returns paginated borrower records.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination (defaults to 1).",
            "schema": { "type": "integer", "format": "int32", "minimum": 1 }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of borrowers per page (default: 20, max: 100).",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with borrower list.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Success" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400Error" }
        }
      },
      "post": {
        "summary": "Create a new borrower",
        "description": "Registers a new borrower (individual or business) in the system.",
        "requestBody": {
          "description": "Borrower creation payload.",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Borrower" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Borrower created successfully.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Success" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400Error" }
        }
      }
    },
    "/borrowers/{id}": {
      "put": {
        "summary": "Update a borrower",
        "description": "Modifies details of an existing borrower by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique ID of the borrower to update.",
            "required": true,
            "schema": { "type": "integer", "format": "int64", "minimum": 1 }
          }
        ],
        "requestBody": {
          "description": "Updated borrower data.",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Borrower" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Borrower updated successfully.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Success" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400Error" }
        }
      },
      "delete": {
        "summary": "Delete a borrower",
        "description": "Permanently removes a borrower record by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique ID of the borrower to delete.",
            "required": true,
            "schema": { "type": "integer", "format": "int64", "minimum": 1 }
          }
        ],
        "responses": {
          "204": { "description": "Borrower deleted successfully." },
          "400": { "$ref": "#/components/responses/400Error" }
        }
      }
    },
    "/repayments": {
      "get": {
        "summary": "List all repayments",
        "description": "Returns paginated repayment records.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination (defaults to 1).",
            "schema": { "type": "integer", "format": "int32", "minimum": 1 }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of repayments per page (default: 20, max: 100).",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with repayment list.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Success" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400Error" }
        }
      },
      "post": {
        "summary": "Create a repayment",
        "description": "Records a new repayment against a loan.",
        "requestBody": {
          "description": "Repayment creation payload.",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Repayment" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Repayment recorded successfully.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Success" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400Error" }
        }
      }
    },
    "/repayments/{id}": {
      "put": {
        "summary": "Update a repayment",
        "description": "Modifies details of an existing repayment by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique ID of the repayment to update.",
            "required": true,
            "schema": { "type": "integer", "format": "int64", "minimum": 1 }
          }
        ],
        "requestBody": {
          "description": "Updating repayment data.",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Repayment" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Repayment updated successfully.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Success" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400Error" }
        }
      },
      "delete": {
        "summary": "Delete a repayment",
        "description": "Permanently removes a repayment record by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique ID of the repayment to delete.",
            "required": true,
            "schema": { "type": "integer", "format": "int64", "minimum": 1 }
          }
        ],
        "responses": {
          "204": {
            "description": "Repayment deleted successfully.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Success" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400Error" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Loan": {
        "required": [
          "loan_product_id",
          "borrower_id",
          "loan_application_id",
          "loan_disbursed_by_id",
          "loan_principal_amount",
          "loan_released_date",
          "loan_interest_method",
          "loan_interest_type",
          "loan_interest_period",
          "loan_interest",
          "loan_duration_period",
          "loan_duration",
          "loan_payment_scheme_id",
          "loan_num_of_repayments",
          "loan_decimal_places"
        ],
        "type": "object",
        "properties": {
          "loan_product_id": {
            "description": "The unique identifier for the loan product",
            "type": "integer"
          },
          "borrower_id": {
            "description": "The unique identifier of the borrower",
            "type": "integer"
          },
          "loan_application_id": {
            "description": "The unique identifier for the loan application",
            "type": "string"
          },
          "loan_disbursed_by_id": {
            "description": "The ID of the entity disbursing the loan",
            "type": "integer"
          },
          "loan_principal_amount": {
            "description": "The principal amount of the loan",
            "type": "number"
          },
          "loan_released_date": {
            "description": "The date when the loan was released",
            "type": "string"
          },
          "loan_interest_method": {
            "description": "The method used to calculate loan interest",
            "type": "string"
          },
          "loan_interest_type": {
            "description": "The type of interest applied to the loan",
            "type": "string"
          },
          "loan_interest_period": {
            "description": "The period for which interest is calculated",
            "type": "string"
          },
          "loan_interest": {
            "description": "The interest rate for the loan",
            "type": "number"
          },
          "loan_duration_period": {
            "description": "The time unit for the loan duration (e.g., days, months, years)",
            "type": "string"
          },
          "loan_duration": {
            "description": "The length of the loan in the specified duration period",
            "type": "integer"
          },
          "loan_payment_scheme_id": {
            "description": "The ID of the payment scheme for the loan",
            "type": "integer"
          },
          "loan_num_of_repayments": {
            "description": "The total number of repayments for the loan",
            "type": "integer"
          },
          "loan_decimal_places": {
            "description": "The number of decimal places to use for loan calculations",
            "type": "string"
          }
        }
      },
      "Borrower": {
        "required": [
          "borrower_business_name",
          "borrower_unique_number",
          "borrower_mobile",
          "borrower_email",
          "borrower_address",
          "borrower_access_ids",
          "custom_field_24036"
        ],
        "type": "object",
        "properties": {
          "borrower_country": {
            "description": "The country where the borrower's business is legally registered and operates",
            "type": "string"
          },
          "borrower_business_name": {
            "description": "The legal name of the borrower's business or company",
            "type": "string"
          },
          "borrower_unique_number": {
            "description": "Unique identifier or registration number for the borrower (e.g., tax ID, business registration number)",
            "type": "string"
          },
          "borrower_mobile": {
            "description": "Primary mobile phone number for the borrower, including country code",
            "type": "string"
          },
          "borrower_email": {
            "description": "Primary email address for the borrower, used for official communication",
            "type": "string"
          },
          "borrower_address": {
            "description": "Complete physical business address including street, city, and postal code",
            "type": "string"
          },
          "borrower_access_ids": {
            "description": "Comma-separated list of system access IDs or permissions granted to the borrower",
            "type": "string"
          },
          "custom_field_24036": {
            "description": "Custom field for additional borrower information (specific purpose should be documented separately)",
            "type": "string"
          }
        }
      },
      "Repayment": {
        "required": ["loan_id", "loan_repayment_method_id", "collector_id"],
        "type": "object",
        "properties": {
          "loan_id": {
            "description": "ID of the loan being repaid.",
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "repayment_amount": {
            "description": "Total amount repaid (principal + interest + fees + penalties).",
            "type": "number",
            "minimum": 0
          },
          "loan_repayment_method_id": {
            "description": "ID of the repayment method (e.g., 1=cash, 2=bank transfer).",
            "type": "integer",
            "format": "int32"
          },
          "repayment_collected_date": {
            "description": "Date when repayment was collected (YYYY-MM-DD).",
            "type": "string",
            "format": "date"
          },
          "collector_id": {
            "description": "ID of the staff member/system that collected the payment.",
            "type": "integer",
            "format": "int64"
          },
          "principal_repayment_amount": {
            "description": "Amount applied to loan principal.",
            "type": "number",
            "minimum": 0
          },
          "interest_repayment_amount": {
            "description": "Amount applied to interest.",
            "type": "number",
            "minimum": 0
          },
          "fees_repayment_amount": {
            "description": "Amount applied to fees.",
            "type": "number",
            "minimum": 0
          },
          "penalty_repayment_amount": {
            "description": "Amount applied to penalties.",
            "type": "number",
            "minimum": 0
          },
          "repayment_description": {
            "description": "Notes about the repayment (max 255 chars).",
            "type": "string",
            "maxLength": 255
          }
        }
      },
      "Success": {
        "required": ["success"],
        "type": "object",
        "properties": {
          "success": {
            "description": "True if the operation succeeded.",
            "type": "boolean"
          },
          "data": {
            "description": "Response payload (varies by endpoint).",
            "type": "object"
          },
          "nextpage": {
            "description": "If next-page is available.",
            "type": "object"
          },
          "recordId": {
            "description": "Record id of the current object",
            "type": "string"
          }
        }
      },
      "Error": {
        "required": ["code", "message"],
        "type": "object",
        "properties": {
          "code": {
            "description": "HTTP error code.",
            "type": "integer",
            "format": "int32",
            "example": 400
          },
          "message": {
            "description": "Human-readable error explanation.",
            "type": "string",
            "example": "Invalid loan ID"
          }
        }
      }
    },
    "responses": {
      "400Error": {
        "description": "Bad request due to invalid parameters or missing data.",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/Error" }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "JWT token for authentication (format: `Bearer <token>`)."
      }
    }
  }
}
